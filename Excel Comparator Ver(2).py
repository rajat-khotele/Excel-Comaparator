import pandas as pd

newFile = 'Production Servers.xlsx'
oldFile = 'Production Servers old.xlsx'

df_new = pd.read_excel(newFile, sheet_name=5)                     # load sheet(0 indexed) you want to compare
df_old = pd.read_excel(oldFile, sheet_name=5)

'''
In line 12 & 13, since the 3 columns form a unique key, so 
grouping these columns will help us access and use key atrribute generated by grouping
'''
df_o = df_old.groupby(['Server'])                                 # df_o is grouped df of old data
df_n = df_new.groupby(['Server'])                                 # df_n is grouped df of new data

df_a = pd.DataFrame(columns=['Server','Application'])             # create an empty df for new data only
df_r = pd.DataFrame(columns=['Server','Application'])             # create an empty df for removed data only

# check for only new keys/data
for key in df_n.groups.keys():                                    # loop through all the keys in new df
    if not key in df_o.groups.keys():                             # check if key is not present in old df
        new = df_n['Application'].get_group(key)                  # this gets the "Application" column's value from new df for that key, as a list
        if len(new) != 0:
            df_a = df_a.append({'Server':key, 'Application':new}, ignore_index=True)                       # adds this key and corresponding value to df_a

# check for only deleted keys/data
for key in df_o.groups.keys():                                    # loop through all the keys in old df
    if not key in df_n.groups.keys():                             # check if key is not present in new df
        old = df_o['Application'].get_group(key)                  # this gets the "Application" column's value from old df for that key, as a list
        if len(old) != 0:
            df_r = df_r.append({'Server':key, 'Application':old}, ignore_index=True)                        # adds this key and corresponding value to df_r

# check keys with changed data
for key in df_n.groups.keys():                                                                              # loop through all the keys in new df
    if key in df_o.groups.keys():                                                                           # check if that key is present in old df
        added = list(set(df_n['Application'].get_group(key)) - set(df_o['Application'].get_group(key)))     # finds what values are added/new, output is a list
        removed = list(set(df_o['Application'].get_group(key)) - set(df_n['Application'].get_group(key)))   # finds what values are removed, output is a list

        if len(added) != 0:
            df_a = df_a.append({'Server':key, 'Application':added}, ignore_index=True)                      # adds new values to df_a
        
        if len(removed) != 0:
            df_r = df_r.append({'Server':key, 'Application':removed}, ignore_index=True)                    # adds removed values to df_r
 

writer = pd.ExcelWriter('Softwares Compared.xlsx', engine='xlsxwriter')
df_a.to_excel(writer, sheet_name='Added', index=False)
df_r.to_excel(writer, sheet_name='Removed', index=False)
writer.save()